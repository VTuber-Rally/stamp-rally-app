import { initializeApp } from "firebase/app";
import { getMessaging } from "firebase/messaging/sw";
import { CacheableResponsePlugin } from "workbox-cacheable-response";
import { clientsClaim } from "workbox-core";
import { ExpirationPlugin } from "workbox-expiration";
import {
  cleanupOutdatedCaches,
  createHandlerBoundToURL,
  precacheAndRoute,
} from "workbox-precaching";
import { NavigationRoute, registerRoute } from "workbox-routing";
import { StaleWhileRevalidate } from "workbox-strategies";

import { firebaseConfig } from "@/lib/consts.ts";

declare let self: ServiceWorkerGlobalScope;

cleanupOutdatedCaches();

const manifest = self.__WB_MANIFEST;

// Pre-cache all assets from workbox manifest (generated by vite-plugin-pwa)
precacheAndRoute(manifest);

registerRoute(
  ({ url }) => /v1\/storage\/buckets/.test(url.pathname),
  new StaleWhileRevalidate({
    cacheName: "rally-assets",
    plugins: [
      new CacheableResponsePlugin({
        statuses: [0, 200],
      }),
      new ExpirationPlugin({
        maxEntries: 100,
        maxAgeSeconds: 60 * 60 * 72,
      }),
    ],
  }),
);

registerRoute(new NavigationRoute(createHandlerBoundToURL("index.html")));

if (firebaseConfig.apiKey) {
  const app = initializeApp(firebaseConfig);
  getMessaging(app);
}

// Claim clients and activate the service worker
// eslint-disable-next-line @typescript-eslint/no-floating-promises
self.skipWaiting();
clientsClaim();
